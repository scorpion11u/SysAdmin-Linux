#############################################################################################
#         Dnscrypt se usa para cifrar nuestras peticiones , el ISP ( Proovedor de servicio de internet) no obtendra tan facil los datos de los sitios que
visitamos,su utilidad radica en  tener una mayor privacidad en nuestra navegacion , el proxy funciona como un servicio local, es una forma efectiva de 
evitar ataques de hombre en el medio y  envenamiento de DNS , ya que la peticion va cifrada desde el servidor hasta nuestro equipo , en " WINDOWS usar
"simple-Dnscrypt",   ###
##############################################################################################
# 1)  Intalar dnscrypt 

sudo apt install dnscrypt-proxy

# NOTA: Una vez intalado modificar el siguiente archivo ( /etc/dnscrypt-proxy/dnscrypt-proxy.toml ) , una vez dentro solo modificar (server_names = ),
# por los que estan aca , 0j0 hay muchisimos mas los puedes buscar aca ( https://dnscrypt.info/public-servers/) o en otras listas,
# solo uso estos por mi comodidad 

NOTA: Si hay un error reiniciar e intalar dnsresolv.

--------------
# 2) Modificar /etc/dnscrypt-proxy/dnscrypt-proxy.toml  --------> LINUX
listen_addresses = ['127.0.0.1:5353']
# server_names = ['Cloudflare']
server_names = ['serbica', 'faelix-ch-ipv4','meganerd','scaleway-fr','ams-dnscrypt-nl','dnscrypt.ca-1','acsacsar-ams-ipv4', 'd0wn-tz-ns1', 'plan9dns-fl','resolver4.dns.openinternet.io','ibksturm', 'ffmuc.net', 'dns.watch', 'dnscrypt.be', 'scaleway-ams', 'v.dnscrypt.uk-ipv4', 'plan9dns-nj', 'dnscrypt.pl', 'dnscrypt.ca-2']

# Filters
ignore_system_dns = true
#netprobe_timeout = 60
#netprobe_address = '9.9.9.9:53'
dnscrypt_servers = true
doh_servers = false
ipv4_servers = true
ipv6_servers = false
require_dnssec = true
require_nolog = true
require_nofilter = true
max_clients = 250
###########################
#        DNS cache        #
###########################

## Enable a DNS cache to reduce latency and outgoing traffic
cache = true
## Cache size
cache_size = 4096
## Minimum TTL for cached entries
cache_min_ttl = 2400
## Maximum TTL for cached entries
cache_max_ttl = 86400
## Minimum TTL for negatively cached entries
cache_neg_min_ttl = 60
## Maximum TTL for negatively cached entries
cache_neg_max_ttl = 600
############ LOGs  ###################################################
# Maximum log files size in MB - Set to 0 for unlimited.
log_files_max_size = 10

# How long to keep backup files, in days
log_files_max_age = 7

# Maximum log files backups to keep (or 0 to keep all backups)
log_files_max_backups = 1

############## Tor ###############
## Enable support for HTTP/3 (DoH3, HTTP over QUIC)
## Note that, like DNSCrypt but unlike other HTTP versions, this uses
## UDP and (usually) port 443 instead of TCP.

#http3 = false


## SOCKS proxy
## Uncomment the following line to route all TCP connections to a local Tor node
## Tor doesn't support UDP, so set `force_tcp` to `true` as well.
    force_tcp = false
   # force_tcp = true
   # proxy = 'socks5://127.0.0.1:9050'

## HTTP/HTTPS proxy
## Only for DoH servers
  # http_proxy = 'http://127.0.0.1:8888'
#8888

####### Block ################
[blacklist]
log_file = '/var/log/dnscrypt-proxy/blacklist.log'

######################### Poner los que quieras , estan en la lista dnscrypt.org ##################
[anonymized_dns]
routes = [
 { server_name='serbica',                              via=['altername', 'plan9dns-nj', 'scaleway-fr']},
 { server_name='faelix-ch-ipv4',                       via=['serbica', 'opennic-R4SAS', 'altername']},
 { server_name='meganerd',                             via=['scaleway-fr', 'v.dnscrypt.uk-ipv4', 'd0wn-tz-ns1']},
 { server_name='scaleway-fr',                          via=['faelix-ch-ipv4', 'plan9dns-nj', 'd0wn-tz-ns1']},   
 { server_name='ams-dnscrypt-nl',                      via=['ibksturm', 'dnswarden-uncensor-us1-dc', 'dns.watch']},
 { server_name='dnscrypt.ca-1',                        via=['plan9dns-fl', 'ffmuc.net', 'dns.watch']},
 { server_name='acsacsar-ams-ipv4',                    via=['resolver4.dns.openinternet.io', 'pwoss.org-dnscrypt', 'dnscrypt.be']},
 { server_name='d0wn-tz-ns1',                          via=['ams-dnscrypt-nl', 'plan9dns-nj', 'dnscrypt.be']},
 { server_name='plan9dns-fl',                          via=['dnscrypt.ca-1', 'plan9dns-nj', 'dnscrypt.pl']},
 { server_name='resolver4.dns.openinternet.io',        via=['acsacsar-ams-ipv4', 'pwoss.org-dnscrypt', 'serbica']},
 { server_name='ibksturm',                             via=['ffmuc.net', 'opennic-R4SAS', 'altername']},
 { server_name='ffmuc.net',                            via=['meganerd', 'ibksturm', 'd0wn-tz-ns1']},
 { server_name='dns.watch',                            via=['scaleway-fr', 'pwoss.org-dnscrypt', 'd0wn-tz-ns1']},
 { server_name='dnscrypt.be',                          via=['dnscrypt.ca-2', 'ffmuc.net', 'scaleway-ams ']},
 { server_name='scaleway-ams',                         via=['meganerd', 'serbica', 'altername']},
 { server_name='v.dnscrypt.uk-ipv4',                   via=['dnscrypt.ca-2', 'serbica', 'plan9dns-fl']},
 { server_name='plan9dns-nj',                          via=['faelix-ch-ipv4', 'dnscrypt.be', 'd0wn-tz-ns1']},
 { server_name='dnscrypt.pl',                          via=['serbica', 'meganerd', 'dnscrypt.ca-1']},
 { server_name='dnscrypt.ca-2',                        via=['dnscrypt.pl', 'd0wn-tz-ns1', 'ffmuc.net']}
 
################################################################################################
------------------------------------------------------------------------------------------------
# 3) En el Archivo /etc/resolv.conf dejar de esta manera

nameserver 127.0.2.1

# NOTA: tambien lo puedes hacer desde la interfaz grafica agregando 127.0.2.1 como tu servidor DNS

-----------
# 4) reiniciar servicios necesarios

systemctl restart dnscrypt-proxy
service NetworkManager restart

------
# 5) Verificar que esta funcionando verificando su estado , e ingresando a un website y que esa web aparezca en el log.

systemctl status dnscrypt-proxy
tail -f /var/log/dnscrypt-proxy/query.log

#  Ejemplo de lo que se se ve en el log :  [2022-07-16 14:50:50]	127.0.0.1	accounts.google.com	A	PASS	165ms	acsacsar-ams-ipv4


####################### ADEMAS PODEMOS BLOQUEAR PUBLICIDAD SIGUIENDO LOS SIGUIENTES PASOS ################################

1) Ruta al archivo de reglas de bloqueo
       blacklist_file = ' nano /etc/dnscrypt-proxy/blacklist.txt ' 

# Guarde y cierre el archivo.

# Instalación de la lista de bloqueadores de anuncios para el proxy dnscrypt

2) Aquí hay un pequeño script bash para descargar y actualizar la lista , crear ( touch /etc/dnscrypt-proxy/update-adblocker.sh ) dentro colocar
el script.                       
INFO : https://www.cyberciti.biz/faq/how-to-install-dnscrypt-proxy-with-adblocker-on-linux/
---------------------------------------------------------------------------------------------------------------------------------
#
#!/bin/bash
# Name: update-adblocker.sh
# Purpose: Download and update adblocker list for dnscrypt proxy
# Usage: Call it from the CLI or cron job https://www.cyberciti.biz/faq/how-do-i-add-jobs-to-cron-under-linux-or-unix-oses/
DEST="/etc/dnscrypt-proxy/blacklist.txt"
#
# Blocks both adware + malware 
# See for other lists https://github.com/StevenBlack/hosts
SRC="https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
TMP_B_FILE="$(mktemp)"
TMP_B_FILE_SORTED="$(mktemp)"
wget --timeout=10 --tries=5 -qO- "${SRC}" | grep -Ev "(localhost)" | grep -Ev "#" | sed -E "s/(0.0.0.0 |127.0.0.1 |255.255.255.255 )//" >> "${TMP_B_FILE}"
awk '/^[^#]/ { print $1 }' "${TMP_B_FILE}" | sort -u > "${TMP_B_FILE_SORTED}"
cp -f "${TMP_B_FILE_SORTED}" "$DEST"
rm -f "${TMP_B_FILE}" "${TMP_B_FILE_SORTED}"
echo
echo FIN
echo
-----------------------------------------------------------------------------------------------------------------------------------------------
3) Ejecutar 
nano /home/usuario/update-adblocker.sh
chmod +x  /home/usuario/update-adblocker.sh
sh /home/usuario/update-adblocker.sh

more /etc/dnscrypt-proxy/blacklist.txt

4) Asegúrese de ejecutar el script update-adblocker.sh diariamente para obtener una lista actualizada del archivo de hosts. Agregue un nuevo trabajo cron de la siguiente manera:
  @daily /path/to/update-adblocker.sh
  
  ############## FIN ########################
            
            
